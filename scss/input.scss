$highlight-color: #f2f2f2 !default; //css属性中!important标签的对立面，不同的是!default用于变量
$red-color: #ff0000;
$blue-color: #0000ff;

body {
  $width: 500px;
  width: $width; //局部作用域body
  background-color: $highlight-color;
  color: #000000;
  font-size: 16px;
}

$highlight-color: #F90; //不会覆盖$highlight-color

.selected {
  border: 1px solid $highlight-color;
}

//中划线和下划线一样效果
$link-color: blue;

a {
  color: $link_color;
}

//--------------------------------------------------
//嵌套使用 父级&
#content {
  display: flex;

  article {
    h1 {
      color: #333
    }

    p {
      margin-bottom: 1.4em
    }
  }

  aside {
    background-color: #EEE
  }

  a {
    color: $link_color;

    &:hover {
      color: $red-color;
      //父选择器的标识符&; 指向 #content a,如果不加&变成#content :hover
    }
  }
}

//------------------------------------
//群组选择器 ,分割
#content_QZ {
  display: flex;

  h1,
  h2,
  h3 {
    color: $red-color;
  }

  .nav1,
  .nav2 {
    color: #00ff;
    margin-left: 5px;
  }
}

//--------------------------------------------

//子组合选择器和同层组合选择器：>、+和~;
#Content_ZH {

  // p {color: $red-colo;}
  //直接子
  >div {
    border: 1px solid $red-color;
    font-weight: bold;
  }

  //同层所有~
  #p1~p {
    color: #00ff00;
  }

  //同层相邻组合选择器+
  #p1+p {
    color: $blue-color;
  }

}

//------------------------------------

//属性嵌套 把属性名从中划线-的地方断开，在根属性后边添加一个冒号:，紧跟一个{ }块
#Content_SXQT {
  border: {
    // style:solid;
    // color:$red-color;
    // top-width:1px;
    // left: 0px;
    // right: 0px;
    top: 1px solid $red-color;
  }

  ;
}

//----------------------------------

/*嵌套导入 因为sass的语法完全兼容css，所以你可以把原始的css文件改名为.scss后缀，即可直接导入了*/
/* 这种注释内容会出现在生成的css文件中 */
#Content_QTDR {
  @import "blue-them.scss";
}

//-------------------------------------

/*混合器*/
@mixin HHQ {
  border: 1px solid red;
  font-size: 16px;

  p {
    font-size: 12px;
  }
}

@mixin link-colors($normal, $hover, $visited) {
  color: $normal;

  &:hover {
    color: $hover
  }

  &:visited {
    color: $visited
  }

  cursor: pointer;
}

//默认值
@mixin link-colors-df($normal,
  $hover: $normal,
  $visited: $normal ) {
  color: #222;

  &:hover {
    color: $hover;
  }

  &:visited {
    color: $visited;
  }
}

#Content_HHQ {
  @include HHQ();

  a {
    @include link-colors(red, green, blue);
    /*等效*/
    //@include link-colors($normal: rgb(150, 131, 131), $hover: green, $visited: blue);
  }

  #df {
    @include link-colors-df(red);
  }
}

//----------------------------------------

//使用选择器继承来精简CSS
.error {
  border: 1px solid red;
  background-color: #fdd;
}

//#Content_JCQ从.error继承样式
.error a {
  //应用到.seriousError a
  color: red;
  font-weight: 100;
}

h1.error {
  //应用到hl.seriousError
  font-size: 1.2rem;
}

#Content_JCQ {
  @extend .error;
}

//--------------------------------------